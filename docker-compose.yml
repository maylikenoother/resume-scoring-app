version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-cvreview}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-cvreviewpass}
      - POSTGRES_DB=${POSTGRES_DB:-cvreview_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-cvreview}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:10000"
    environment:
      - POSTGRES_URL=postgresql+asyncpg://${POSTGRES_USER:-cvreview}:${POSTGRES_PASSWORD:-cvreviewpass}@postgres:5432/${POSTGRES_DB:-cvreview_db}
      - SECRET_KEY=${SECRET_KEY:-localdevelopmentsecretkey}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - PORT=10000
    depends_on:
      postgres:
        condition: service_healthy
    restart: always

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=development
    depends_on:
      - backend
    restart: always

volumes:
  postgres_data: